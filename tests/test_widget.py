import pytestfrom src.widget import mask_account_card, get_date# позитивный тест mask_account_card -> 100% PASSED@pytest.mark.parametrize("name_type, card_or_account, expected", [    ('Maestro', '1596837868705199', 'Maestro 1596 83** **** 5199'),    ('Счет', '64686473678894779589', 'Счет **9589'),    ('MasterCard', '7158300734726758', 'MasterCard 7158 30** **** 6758'),    ('Visa Classic', '6831982476737658', 'Visa Classic 6831 98** **** 7658'),    ('Visa Platinum', '8990922113665229', 'Visa Platinum 8990 92** **** 5229'),    ('Visa Gold', '5999414228426353', 'Visa Gold 5999 41** **** 6353')])def test_mask_account_card_positive(name_type, card_or_account, expected):    assert mask_account_card(str(name_type + ' ' + card_or_account)) == expected# негативный тест test_mask_account_card -> 100% PASSEDdef test_mask_account_card_negative(name_type_card_or_account, mask_card_number_negative):    for name_type, space, expected in zip(name_type_card_or_account, ' ', mask_card_number_negative):        with pytest.raises(Exception):            assert mask_account_card(str(name_type + space + expected))# позитивный тест get_date -> 100% PASSEDdef test_get_date_positive(date_transaction_positive, date_transaction_positive_expected_values):    assert get_date(date_transaction_positive) == date_transaction_positive_expected_values# негативный тест get_date -> 100% PASSEDdef test_get_date_negative(date_transaction_negative):    with pytest.raises(Exception):        assert get_date(date_transaction_negative)if __name__ == '__main__':    pytest.main(['-vv'])